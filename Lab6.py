# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VCXg5XhQMxjSG837BDp2S22-cHUIoNrG
"""

import matplotlib.pyplot  as plt
import numpy as np
import pandas as pd

df=pd.read_csv('fifa_data.csv')
df.dropna()
y=df.loc[:,"Weight"]
l1=[]
for i in y:
  l1.append(i)
for i, x in enumerate (l1):
 l1[i]=str(x).replace("lbs","")
 
l1=pd.to_numeric(l1,errors='coerce')
print(l1)
myLabels=["Under 125lbs","125lbs-150lbs","151lbs-175lbs","176lbs-200lbs","Above 200 lbs"]
r1=[]
r2=[]
r3=[]
r4=[]
r5=[]
for i in l1:
  if(i<125):
    r1.append(i)
  elif(i>=125 and i<=150):
    r2.append(i)
  elif(i>150 and i<=175):
    r3.append(i)
  elif(i>175 and i<=200):
    r4.append(i)
  elif(i>200):
    r5.append(i)
ranges=np.array([len(r1),len(r2),len(r3),len(r4),len(r5)])
plt.pie(ranges,labels=myLabels)
plt.legend()
plt.show()

plt.bar(myLabels,ranges)
plt.show()

import matplotlib.pyplot as plt
import pandas as pd
import numpy as np
from itertools import chain
from scipy import stats
from csv import writer
from csv import reader

df=pd.read_csv('twitter_dog_rates_data.csv')
df.dropna()
temp=df.loc[:,"text"]
ser=pd.Series(temp,copy=False)
result = ser.str.extract(pat = '(.[0-9]/10)')
result=result.replace(to_replace="/10",value="",regex=True)
dog_ratings=[]
result=result.values.tolist()
dog_ratings=list(chain.from_iterable(result))
dog_ratings=pd.to_numeric(temp,errors='coerce')
for i,x in enumerate(dog_ratings):
  if x>25:
    dog_ratings=np.delete(dog_ratings,i)
   
#For timestamp column
timestamp=df.loc[:,"timestamp"]
for i,x in timestamp.items():
  timestamp[i] = pd.to_datetime(timestamp[i], format='%Y%m%d %H:%M:%S')

plt.plot(dog_ratings['timestamp'], dog_ratings['rating'], 'b.', alpha=0.5)
plt.plot(dog_ratings['timestamp'], dog_ratings['prediction'], 'r-', linewidth=3)
plt.show()
fit = stats.linregress(dog_ratings['timestamp_seconds'], dog_ratings['rating'])
dog_ratings['prediction'] = dog_ratings['timestamp_seconds']*fit.slope + fit.intercept